// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portal.Persistance;

namespace Portal.Persistance.Migrations
{
    [DbContext(typeof(PortalDbContext))]
    partial class PortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("Portal.Domain.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Teacher")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("Portal.Domain.Entities.Student", b =>
                {
                    b.Property<int>("ClassId");

                    b.Property<string>("SureName")
                        .HasMaxLength(20);

                    b.Property<byte>("Age");

                    b.Property<float>("GPA");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("ClassId", "SureName");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Portal.Domain.Entities.Student", b =>
                {
                    b.HasOne("Portal.Domain.Entities.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
