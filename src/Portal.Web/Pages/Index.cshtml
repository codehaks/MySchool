@page
@{
    ViewData["Title"] = "Home";
}

<div id="app">

    <a href="#" class="btn btn-success" v-on:click="showClassAddModal"> Add ...</a>

    <table class="table table-hover">
        <thead>
            <tr>
                <th>#</th>
                <th>Name</th>
                <th>Location</th>
                <th>Teacher</th>
                <th></th>
            </tr>
        </thead>
        <tr v-for="(item,index) in classes">
            <td>{{index+1}}</td>
            <td>{{item.name}}</td>
            <td>{{item.location}}</td>
            <td>{{item.teacher}}</td>
            <td>
                <a href="#" class="btn btn-danger" v-on:click="removeClass(item,index)">Remove</a>
                <a href="#" class="btn btn-primary" v-on:click="editClass(item,index)">Edit</a>
            </td>
        </tr>
    </table>



    <!-- Modal -->
    <div class="modal fade" id="addClass" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <div class="form-group">
                        <label for="name">Name</label>
                        <input v-model="className" type="text" class="form-control" style="width:100%">
                    </div>
                    <div class="form-group">
                        <label for="lastName">Location</label>
                        <input v-model="classLocation" type="text" class="form-control" style="width:100%">
                    </div>
                    <div class="form-group">
                        <label for="lastName">Teacher</label>
                        <input v-model="classTeacher" type="text" class="form-control" style="width:100%">
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" v-on:click="saveClassChanges">Save changes</button>
                </div>
            </div>
        </div>
    </div>


</div>




@section scripts{

    <script>
        var app = new Vue({
            el: "#app",
            data: {
                classes: [],

                classId: null,
                classIndex: null,
                className: "",
                classLocation: "",
                classTeacher: "",

                classMode: "add",

                students: [],
            },
            created: function () {
                this.getClasses();

            },
            methods: {
                showClassAddModal: function () {
                    classMode: "add";
                    $('#addClass').modal('show');
                },

                editClass:
                    function (item, index) {

                        this.className = item.name;
                        this.classLocation = item.location;
                        this.classTeacher = item.teacher;

                        this.classIndex = index;
                        this.classId = item.id;

                        this.classMode = "edit";

                        $('#addClass').modal('show');
                    },

                removeClass: function (item, index) {
                    var vm = this;

                    var classToDelete = {
                        id: item.id
                    }

                    $.ajax({ url: "/api/class", data: classToDelete, method: "DELETE" })
                        .done(function (data) {
                            vm.classes.splice(index, 1);
                            toastr.success("class removed");
                        }).fail(function () {
                            toastr.error("Can not remove this class!");
                        });
                },
                saveClassChanges: function () {
                    if (this.classMode == "add") {
                        this.addClass();
                    } else {
                        this.updateClass()
                    }
                },
                updateClass: function () {
                    var vm = this;

                    var existingClass = {
                        id: vm.classId,
                        name: vm.className,
                        location: vm.classLocation,
                        teacher: vm.classTeacher

                    }

                    $.ajax({ url: "/api/class", data: existingClass, method: "PUT" })
                        .done(function () {
                            vm.classes[vm.classIndex].name = vm.className;
                            vm.classes[vm.classIndex].location = vm.classLocation;
                            vm.classes[vm.classIndex].teacher = vm.classTeacher;

                            toastr.success("Class updated.");
                        }).fail(function () {
                            toastr.error("Can not update this class.");
                        }).always(function () {
                            vm.clearData();
                        });

                    $('#addClass').modal('hide');
                },
                addClass: function () {
                    var vm = this;

                    var newClass = {
                        name: vm.className,
                        location: vm.classLocation,
                        teacher: vm.classTeacher
                    }

                    $.ajax({ url: "/api/class", data: newClass, method: "POST" })
                        .done(function (data) {
                            vm.classes.splice(0, 0, newClass);
                            toastr.success("New class created.");
                        }).fail(function () {
                            toastr.error("Can not add new class!");
                        }).always(function () {
                            vm.clearData();
                        });

                    $('#addClass').modal('hide');

                },
                getClasses: function () {
                    var vm = this;
                    $.ajax({ url: "/api/class", method: "GET" })
                        .done(function (data) {
                            vm.classes = data;
                        }).fail(function () {
                            toastr.error("Cannot load classes!");
                        });
                },
                clearData: function () {
                    var vm = this;
                    vm.className = "";
                    vm.classLocation = "";
                    vm.classTeacher = "";
                }
            }


        });
    </script>

}

